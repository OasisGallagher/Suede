#pragma once

const char* const grammar = 
"Program\n"
"	: Blocks		$$ = $1\n"
"\n"
"Blocks\n"
"	: PropertyBlock TagBlock ShaderBlocks		$$ = make(\"Blocks\", $3, $2, $1)\n"
"\n"
"PropertyBlock\n"
"	: properties { Properties }			$$ = make(\"PropertyBlock\", $2)\n"
"\n"
"Properties\n"
"	: epsilon				$$ = $0\n"
"	| PropertiesPrefix		$$ = $1\n"
"\n"
"PropertiesPrefix\n"
"	: PropertiesPrefix Property			$$ = make(\"Properties\", $2, $1)\n"
"	| Property							$$ = $1\n"
"\n"
"Property\n"
"	: int Identifier NumberInitializer ;	$$ = make(\"Int\", $3, $2)\n"
"	| float Identifier NumberInitializer ;	$$ = make(\"Float\", $4, $2)\n"
"	| vec3 Identifier Vec3Initializer ;		$$ = make(\"Vec3\", $3, $2)\n"
"	| tex2 Identifier ColorInitializer ;	$$ = make(\"Tex2\", $3, $2)\n"
"	| mat3 Identifier ;						$$ = make(\"Mat3\", $2)\n"
"	| mat4 Identifier ;						$$ = make(\"Mat4\", $2)\n"
"\n"
"NumberInitializer\n"
"	: epsilon		$$ = $0\n"
"	|  = Number		$$ = $1\n"
"\n"
"Vec3Initializer\n"
"	: epsilon			$$ = $0\n"
"	| = { Numbers3 }	$$ = $2\n"
"\n"
"ColorInitializer\n"
"	: epsilon			$$ = $0\n"
"	| = Number			$$ = make(\"Color\", $1)\n"
"\n"
"Numbers3\n"
"	: epsilon					$$ = $0\n"
"	| Number					$$ = make(\"Number3\", $1, $0, $0)\n"
"	| Number , Number			$$ = make(\"Number3\", $3, $1, $0)\n"
"	| Number , Number , Number	$$ = make(\"Number3\", $5, $3, $1)\n"
"\n"
"TagBlock\n"
"	: epsilon		$$ = $0\n"
"	| tags { Tags }	$$ = make(\"TagBlock\", $2)\n"
"\n"
"Tags\n"
"	: epsilon		$$ = $0\n"
"	| TagsPrefix	$$ = $1\n"
"\n"
"TagsPrefix\n"
"	: TagsPrefix Tag	$$ = make(\"Tags\", $2, $1)\n"
"	| Tag				$$ = $1\n"
"\n"
"Tag\n"
"	: queue = String ;	$$ = make(\"Queue\", $2)\n"
"\n"
"ShaderBlocks\n"
"	: ShaderBlocksPrefix			$$ = $1\n"
"\n"
"ShaderBlocksPrefix\n"
"	: ShaderBlocksPrefix ShaderBlock		$$ = make(\"ShaderBlocks\", $2, $1)\n"
"	| ShaderBlock							$$ = $1\n"
"\n"
"ShaderBlock\n"
"	: shader { ShaderCode }			$$ = make(\"ShaderBlock\", $2)\n"
"\n"
"ShaderCode\n"
"	: epsilon			$$ = $0\n"
"	| Code				$$ = $1\n"
"\n"
"Number\n"
"	: number		$$ = constant($1)\n"
"\n"
"Code\n"
"	: code			$$ = code($1)\n"
"\n"
"Identifier\n"
"	: identifier	$$ = symbol($1)\n"
"\n"
"String\n"
"	: string		$$ = literal($1)\n"
;