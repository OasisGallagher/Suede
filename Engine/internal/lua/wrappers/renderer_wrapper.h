// Warning: this file is generated by wrapper.py.

#pragma once

#include "renderer.h"

#include "lua++.h"
#include "tools/string.h"

class Renderer_Wrapper {
	static int ToString(lua_State* L) {
		Renderer* _p = Lua::callerPtr<Renderer>(L);

		lua_pushstring(L, String::Format("Renderer@0x%p", _p).c_str());
		return 1;
	}

	// void RemoveMaterialAt(uint index)
	static int RemoveMaterialAt(lua_State* L) {
		Renderer* _p = Lua::callerPtr<Renderer>(L);
		uint index = Lua::get<uint>(L, 2);
		
		_p->RemoveMaterialAt(index);
		return 0;
	}

	// uint GetMaterialCount()
	static int GetMaterialCount(lua_State* L) {
		Renderer* _p = Lua::callerPtr<Renderer>(L);
		return Lua::push(L, _p->GetMaterialCount());
	}

	// void UpdateMaterialProperties()
	static int UpdateMaterialProperties(lua_State* L) {
		Renderer* _p = Lua::callerPtr<Renderer>(L);
		_p->UpdateMaterialProperties();
		return 0;
	}

public:
	static void create(lua_State* L) {
		Lua::createMetatable<Renderer>(L);
	}
	
	static void initialize(lua_State* L, std::vector<luaL_Reg>& funcs, std::vector<luaL_Reg>& fields) {
		luaL_Reg metalib[] = {
			{ "__gc", Lua::deletePtr<Renderer> },
			{ "__tostring", ToString }, 
			{ "RemoveMaterialAt", RemoveMaterialAt },
			{ "GetMaterialCount", GetMaterialCount },
			{ "UpdateMaterialProperties", UpdateMaterialProperties },
			{ nullptr, nullptr }
		};

		Lua::initMetatable<Renderer>(L, metalib, TypeID<Component>::string());
	}
};

class MeshRenderer_Wrapper {
	static int NewMeshRenderer(lua_State* L) {
		return Lua::newObject<MeshRenderer>(L);
	}

	static int ToString(lua_State* L) {
		MeshRenderer* _p = Lua::callerPtr<MeshRenderer>(L);

		lua_pushstring(L, String::Format("MeshRenderer@0x%p", _p).c_str());
		return 1;
	}

public:
	static void create(lua_State* L) {
		Lua::createMetatable<MeshRenderer>(L);
	}
	
	static void initialize(lua_State* L, std::vector<luaL_Reg>& funcs, std::vector<luaL_Reg>& fields) {
		funcs.push_back(luaL_Reg { "NewMeshRenderer", NewMeshRenderer });

		luaL_Reg metalib[] = {
			{ "__gc", Lua::deletePtr<MeshRenderer> },
			{ "__tostring", ToString }, 
			{ nullptr, nullptr }
		};

		Lua::initMetatable<MeshRenderer>(L, metalib, TypeID<Renderer>::string());
	}
};

class ParticleRenderer_Wrapper {
	static int NewParticleRenderer(lua_State* L) {
		return Lua::newObject<ParticleRenderer>(L);
	}

	static int ToString(lua_State* L) {
		ParticleRenderer* _p = Lua::callerPtr<ParticleRenderer>(L);

		lua_pushstring(L, String::Format("ParticleRenderer@0x%p", _p).c_str());
		return 1;
	}

public:
	static void create(lua_State* L) {
		Lua::createMetatable<ParticleRenderer>(L);
	}
	
	static void initialize(lua_State* L, std::vector<luaL_Reg>& funcs, std::vector<luaL_Reg>& fields) {
		funcs.push_back(luaL_Reg { "NewParticleRenderer", NewParticleRenderer });

		luaL_Reg metalib[] = {
			{ "__gc", Lua::deletePtr<ParticleRenderer> },
			{ "__tostring", ToString }, 
			{ nullptr, nullptr }
		};

		Lua::initMetatable<ParticleRenderer>(L, metalib, TypeID<Renderer>::string());
	}
};

class SkinnedMeshRenderer_Wrapper {
	static int NewSkinnedMeshRenderer(lua_State* L) {
		return Lua::newObject<SkinnedMeshRenderer>(L);
	}

	static int ToString(lua_State* L) {
		SkinnedMeshRenderer* _p = Lua::callerPtr<SkinnedMeshRenderer>(L);

		lua_pushstring(L, String::Format("SkinnedMeshRenderer@0x%p", _p).c_str());
		return 1;
	}

public:
	static void create(lua_State* L) {
		Lua::createMetatable<SkinnedMeshRenderer>(L);
	}
	
	static void initialize(lua_State* L, std::vector<luaL_Reg>& funcs, std::vector<luaL_Reg>& fields) {
		funcs.push_back(luaL_Reg { "NewSkinnedMeshRenderer", NewSkinnedMeshRenderer });

		luaL_Reg metalib[] = {
			{ "__gc", Lua::deletePtr<SkinnedMeshRenderer> },
			{ "__tostring", ToString }, 
			{ nullptr, nullptr }
		};

		Lua::initMetatable<SkinnedMeshRenderer>(L, metalib, TypeID<Renderer>::string());
	}
};
