// Warning: this file is generated by wrapper.py.

#pragma once

#include "animation_wrapper.h"
#include "behaviour_wrapper.h"
#include "camera_wrapper.h"
#include "component_wrapper.h"
#include "engine_wrapper.h"
#include "environment_wrapper.h"
#include "font_wrapper.h"
#include "gameobject_wrapper.h"
#include "gizmos_wrapper.h"
#include "graphics_wrapper.h"
#include "imageeffect_wrapper.h"
#include "light_wrapper.h"
#include "material_wrapper.h"
#include "mesh_wrapper.h"
#include "object_wrapper.h"
#include "particlesystem_wrapper.h"
#include "plane_wrapper.h"
#include "projector_wrapper.h"
#include "rect_wrapper.h"
#include "renderer_wrapper.h"
#include "resources_wrapper.h"
#include "screen_wrapper.h"
#include "shader_wrapper.h"
#include "statistics_wrapper.h"
#include "tagmanager_wrapper.h"
#include "texture_wrapper.h"
#include "time2_wrapper.h"
#include "transform_wrapper.h"
#include "variant_wrapper.h"
#include "world_wrapper.h"

namespace Lua {

static int configure(lua_State* L) {
	std::vector<luaL_Reg> regs;
	
	Skeleton_Wrapper::create(L);
	AnimationClip_Wrapper::create(L);
	AnimationState_Wrapper::create(L);
	AnimationKeys_Wrapper::create(L);
	AnimationFrame_Wrapper::create(L);
	AnimationCurve_Wrapper::create(L);
	Animation_Wrapper::create(L);
	Behaviour_Wrapper::create(L);
	Camera_Wrapper::create(L);
	Component_Wrapper::create(L);
	Engine_Wrapper::create(L);
	Environment_Wrapper::create(L);
	Font_Wrapper::create(L);
	GameObject_Wrapper::create(L);
	Gizmos_Wrapper::create(L);
	Graphics_Wrapper::create(L);
	ImageEffect_Wrapper::create(L);
	Light_Wrapper::create(L);
	Material_Wrapper::create(L);
	SubMesh_Wrapper::create(L);
	Mesh_Wrapper::create(L);
	MeshProvider_Wrapper::create(L);
	TextMesh_Wrapper::create(L);
	MeshFilter_Wrapper::create(L);
	Object_Wrapper::create(L);
	ParticleEmitter_Wrapper::create(L);
	SphereParticleEmitter_Wrapper::create(L);
	ParticleAnimator_Wrapper::create(L);
	ParticleSystem_Wrapper::create(L);
	Plane_Wrapper::create(L);
	Projector_Wrapper::create(L);
	Rect_Wrapper::create(L);
	Renderer_Wrapper::create(L);
	MeshRenderer_Wrapper::create(L);
	ParticleRenderer_Wrapper::create(L);
	SkinnedMeshRenderer_Wrapper::create(L);
	Resources_Wrapper::create(L);
	Screen_Wrapper::create(L);
	Shader_Wrapper::create(L);
	Statistics_Wrapper::create(L);
	TagManager_Wrapper::create(L);
	Texture_Wrapper::create(L);
	Texture2D_Wrapper::create(L);
	TextureCube_Wrapper::create(L);
	TextureBuffer_Wrapper::create(L);
	RenderTexture_Wrapper::create(L);
	MRTRenderTexture_Wrapper::create(L);
	Time_Wrapper::create(L);
	Transform_Wrapper::create(L);
	Variant_Wrapper::create(L);
	World_Wrapper::create(L);

	Skeleton_Wrapper::initialize(L, regs);
	AnimationClip_Wrapper::initialize(L, regs);
	AnimationState_Wrapper::initialize(L, regs);
	AnimationKeys_Wrapper::initialize(L, regs);
	AnimationFrame_Wrapper::initialize(L, regs);
	AnimationCurve_Wrapper::initialize(L, regs);
	Animation_Wrapper::initialize(L, regs);
	Behaviour_Wrapper::initialize(L, regs);
	Camera_Wrapper::initialize(L, regs);
	Component_Wrapper::initialize(L, regs);
	Engine_Wrapper::initialize(L, regs);
	Environment_Wrapper::initialize(L, regs);
	Font_Wrapper::initialize(L, regs);
	GameObject_Wrapper::initialize(L, regs);
	Gizmos_Wrapper::initialize(L, regs);
	Graphics_Wrapper::initialize(L, regs);
	ImageEffect_Wrapper::initialize(L, regs);
	Light_Wrapper::initialize(L, regs);
	Material_Wrapper::initialize(L, regs);
	SubMesh_Wrapper::initialize(L, regs);
	Mesh_Wrapper::initialize(L, regs);
	MeshProvider_Wrapper::initialize(L, regs);
	TextMesh_Wrapper::initialize(L, regs);
	MeshFilter_Wrapper::initialize(L, regs);
	Object_Wrapper::initialize(L, regs);
	ParticleEmitter_Wrapper::initialize(L, regs);
	SphereParticleEmitter_Wrapper::initialize(L, regs);
	ParticleAnimator_Wrapper::initialize(L, regs);
	ParticleSystem_Wrapper::initialize(L, regs);
	Plane_Wrapper::initialize(L, regs);
	Projector_Wrapper::initialize(L, regs);
	Rect_Wrapper::initialize(L, regs);
	Renderer_Wrapper::initialize(L, regs);
	MeshRenderer_Wrapper::initialize(L, regs);
	ParticleRenderer_Wrapper::initialize(L, regs);
	SkinnedMeshRenderer_Wrapper::initialize(L, regs);
	Resources_Wrapper::initialize(L, regs);
	Screen_Wrapper::initialize(L, regs);
	Shader_Wrapper::initialize(L, regs);
	Statistics_Wrapper::initialize(L, regs);
	TagManager_Wrapper::initialize(L, regs);
	Texture_Wrapper::initialize(L, regs);
	Texture2D_Wrapper::initialize(L, regs);
	TextureCube_Wrapper::initialize(L, regs);
	TextureBuffer_Wrapper::initialize(L, regs);
	RenderTexture_Wrapper::initialize(L, regs);
	MRTRenderTexture_Wrapper::initialize(L, regs);
	Time_Wrapper::initialize(L, regs);
	Transform_Wrapper::initialize(L, regs);
	Variant_Wrapper::initialize(L, regs);
	World_Wrapper::initialize(L, regs);

	// register constructors or getters.
	luaL_checkversion(L);
	lua_createtable(L, 0, (int)regs.size());

	regs.push_back(luaL_Reg{ nullptr, nullptr });
	luaL_setfuncs(L, regs.data(), 0);

	return 1;
}

}	// namespace Lua
