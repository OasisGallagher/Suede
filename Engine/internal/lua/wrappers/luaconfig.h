// Warning: this file is generated by wrapper.py.

#pragma once

#include "animation_wrapper.h"
#include "behaviour_wrapper.h"
#include "bounds_wrapper.h"
#include "camera_wrapper.h"
#include "color_wrapper.h"
#include "component_wrapper.h"
#include "engine_wrapper.h"
#include "environment_wrapper.h"
#include "font_wrapper.h"
#include "gameobject_wrapper.h"
#include "gizmos_wrapper.h"
#include "graphics_wrapper.h"
#include "imageeffect_wrapper.h"
#include "light_wrapper.h"
#include "material_wrapper.h"
#include "mesh_wrapper.h"
#include "particlesystem_wrapper.h"
#include "plane_wrapper.h"
#include "polygon_wrapper.h"
#include "projector_wrapper.h"
#include "rect_wrapper.h"
#include "renderer_wrapper.h"
#include "resources_wrapper.h"
#include "screen_wrapper.h"
#include "shader_wrapper.h"
#include "statistics_wrapper.h"
#include "tagmanager_wrapper.h"
#include "texture_wrapper.h"
#include "time2_wrapper.h"
#include "transform_wrapper.h"
#include "variant_wrapper.h"
#include "world_wrapper.h"

namespace Lua {

static int configure(lua_State* L) {
	std::vector<luaL_Reg> funcs, fields;

	SkeletonBone_Wrapper::create(L);
	SkeletonNode_Wrapper::create(L);
	Skeleton_Wrapper::create(L);
	AnimationClip_Wrapper::create(L);
	AnimationState_Wrapper::create(L);
	AnimationKeys_Wrapper::create(L);
	AnimationFrame_Wrapper::create(L);
	AnimationCurve_Wrapper::create(L);
	Animation_Wrapper::create(L);
	Behaviour_Wrapper::create(L);
	Bounds_Wrapper::create(L);
	Camera_Wrapper::create(L);
	CameraUtility_Wrapper::create(L);
	Color_Wrapper::create(L);
	Component_Wrapper::create(L);
	ComponentUtility_Wrapper::create(L);
	Engine_Wrapper::create(L);
	Environment_Wrapper::create(L);
	CharacterInfo_Wrapper::create(L);
	Font_Wrapper::create(L);
	GameObject_Wrapper::create(L);
	Gizmos_Wrapper::create(L);
	Graphics_Wrapper::create(L);
	ImageEffect_Wrapper::create(L);
	Light_Wrapper::create(L);
	Material_Wrapper::create(L);
	TriangleBias_Wrapper::create(L);
	SubMesh_Wrapper::create(L);
	BlendAttribute_Wrapper::create(L);
	InstanceAttribute_Wrapper::create(L);
	MeshAttribute_Wrapper::create(L);
	Mesh_Wrapper::create(L);
	MeshProvider_Wrapper::create(L);
	TextMesh_Wrapper::create(L);
	MeshFilter_Wrapper::create(L);
	ParticleBurst_Wrapper::create(L);
	Particle_Wrapper::create(L);
	ParticleEmitter_Wrapper::create(L);
	SphereParticleEmitter_Wrapper::create(L);
	ParticleAnimator_Wrapper::create(L);
	ParticleSystem_Wrapper::create(L);
	Plane_Wrapper::create(L);
	Polygon_Wrapper::create(L);
	Triangle_Wrapper::create(L);
	Decal_Wrapper::create(L);
	Projector_Wrapper::create(L);
	Rect_Wrapper::create(L);
	Renderer_Wrapper::create(L);
	MeshRenderer_Wrapper::create(L);
	ParticleRenderer_Wrapper::create(L);
	SkinnedMeshRenderer_Wrapper::create(L);
	Resources_Wrapper::create(L);
	Screen_Wrapper::create(L);
	Property_Wrapper::create(L);
	ShaderProperty_Wrapper::create(L);
	Shader_Wrapper::create(L);
	Statistics_Wrapper::create(L);
	TagManager_Wrapper::create(L);
	Texture_Wrapper::create(L);
	Texture2D_Wrapper::create(L);
	TextureCube_Wrapper::create(L);
	TextureBuffer_Wrapper::create(L);
	RenderTexture_Wrapper::create(L);
	RenderTextureUtility_Wrapper::create(L);
	MRTRenderTexture_Wrapper::create(L);
	Time_Wrapper::create(L);
	PRS_Wrapper::create(L);
	Transform_Wrapper::create(L);
	Variant_Wrapper::create(L);
	World_Wrapper::create(L);

	SkeletonBone_Wrapper::initialize(L, funcs, fields);
	SkeletonNode_Wrapper::initialize(L, funcs, fields);
	Skeleton_Wrapper::initialize(L, funcs, fields);
	AnimationClip_Wrapper::initialize(L, funcs, fields);
	AnimationState_Wrapper::initialize(L, funcs, fields);
	AnimationKeys_Wrapper::initialize(L, funcs, fields);
	AnimationFrame_Wrapper::initialize(L, funcs, fields);
	AnimationCurve_Wrapper::initialize(L, funcs, fields);
	Animation_Wrapper::initialize(L, funcs, fields);
	Behaviour_Wrapper::initialize(L, funcs, fields);
	Bounds_Wrapper::initialize(L, funcs, fields);
	Camera_Wrapper::initialize(L, funcs, fields);
	CameraUtility_Wrapper::initialize(L, funcs, fields);
	Color_Wrapper::initialize(L, funcs, fields);
	Component_Wrapper::initialize(L, funcs, fields);
	ComponentUtility_Wrapper::initialize(L, funcs, fields);
	Engine_Wrapper::initialize(L, funcs, fields);
	Environment_Wrapper::initialize(L, funcs, fields);
	CharacterInfo_Wrapper::initialize(L, funcs, fields);
	Font_Wrapper::initialize(L, funcs, fields);
	GameObject_Wrapper::initialize(L, funcs, fields);
	Gizmos_Wrapper::initialize(L, funcs, fields);
	Graphics_Wrapper::initialize(L, funcs, fields);
	ImageEffect_Wrapper::initialize(L, funcs, fields);
	Light_Wrapper::initialize(L, funcs, fields);
	Material_Wrapper::initialize(L, funcs, fields);
	TriangleBias_Wrapper::initialize(L, funcs, fields);
	SubMesh_Wrapper::initialize(L, funcs, fields);
	BlendAttribute_Wrapper::initialize(L, funcs, fields);
	InstanceAttribute_Wrapper::initialize(L, funcs, fields);
	MeshAttribute_Wrapper::initialize(L, funcs, fields);
	Mesh_Wrapper::initialize(L, funcs, fields);
	MeshProvider_Wrapper::initialize(L, funcs, fields);
	TextMesh_Wrapper::initialize(L, funcs, fields);
	MeshFilter_Wrapper::initialize(L, funcs, fields);
	ParticleBurst_Wrapper::initialize(L, funcs, fields);
	Particle_Wrapper::initialize(L, funcs, fields);
	ParticleEmitter_Wrapper::initialize(L, funcs, fields);
	SphereParticleEmitter_Wrapper::initialize(L, funcs, fields);
	ParticleAnimator_Wrapper::initialize(L, funcs, fields);
	ParticleSystem_Wrapper::initialize(L, funcs, fields);
	Plane_Wrapper::initialize(L, funcs, fields);
	Polygon_Wrapper::initialize(L, funcs, fields);
	Triangle_Wrapper::initialize(L, funcs, fields);
	Decal_Wrapper::initialize(L, funcs, fields);
	Projector_Wrapper::initialize(L, funcs, fields);
	Rect_Wrapper::initialize(L, funcs, fields);
	Renderer_Wrapper::initialize(L, funcs, fields);
	MeshRenderer_Wrapper::initialize(L, funcs, fields);
	ParticleRenderer_Wrapper::initialize(L, funcs, fields);
	SkinnedMeshRenderer_Wrapper::initialize(L, funcs, fields);
	Resources_Wrapper::initialize(L, funcs, fields);
	Screen_Wrapper::initialize(L, funcs, fields);
	Property_Wrapper::initialize(L, funcs, fields);
	ShaderProperty_Wrapper::initialize(L, funcs, fields);
	Shader_Wrapper::initialize(L, funcs, fields);
	Statistics_Wrapper::initialize(L, funcs, fields);
	TagManager_Wrapper::initialize(L, funcs, fields);
	Texture_Wrapper::initialize(L, funcs, fields);
	Texture2D_Wrapper::initialize(L, funcs, fields);
	TextureCube_Wrapper::initialize(L, funcs, fields);
	TextureBuffer_Wrapper::initialize(L, funcs, fields);
	RenderTexture_Wrapper::initialize(L, funcs, fields);
	RenderTextureUtility_Wrapper::initialize(L, funcs, fields);
	MRTRenderTexture_Wrapper::initialize(L, funcs, fields);
	Time_Wrapper::initialize(L, funcs, fields);
	PRS_Wrapper::initialize(L, funcs, fields);
	Transform_Wrapper::initialize(L, funcs, fields);
	Variant_Wrapper::initialize(L, funcs, fields);
	World_Wrapper::initialize(L, funcs, fields);

	// register constructors or getters.
	luaL_checkversion(L);
	lua_createtable(L, 0, (int)funcs.size());

	funcs.push_back(luaL_Reg{ nullptr, nullptr });
	luaL_setfuncs(L, funcs.data(), 0);

	for (luaL_Reg& field : fields) {
		field.func(L);
		lua_setfield(L, -2, field.name);
	}

	return 1;
}

}	// namespace Lua
