// Warning: this file is generated by wrapper.py.

#pragma once

#include "../luax.h"
#include "gameobject.h"

class GameObject_Wrapper {
	static int NewGameObject(lua_State* L) {
		return Lua::fromShared(L, ::NewGameObject());
	}

	static int GetActive(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		return Lua::push(L, _p->GetActive());
	}

	static int SetActiveSelf(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		bool value = Lua::get<bool>(L, -1);
		_p->SetActiveSelf(value);
		return 0;
	}

	static int GetActiveSelf(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		return Lua::push(L, _p->GetActiveSelf());
	}

	static int GetUpdateStrategy(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		return Lua::push(L, _p->GetUpdateStrategy());
	}

	static int SetTag(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		std::string value = Lua::get<std::string>(L, -1);
		return Lua::push(L, _p->SetTag(value));
	}

	static int GetName(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		return Lua::push(L, _p->GetName());
	}

	static int SetName(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		std::string value = Lua::get<std::string>(L, -1);
		_p->SetName(value);
		return 0;
	}

	static int CullingUpdate(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		_p->CullingUpdate();
		return 0;
	}

	static int RenderingUpdate(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		_p->RenderingUpdate();
		return 0;
	}

	static int GetTransform(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		return Lua::push(L, _p->GetTransform());
	}

	static int RecalculateBounds(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		int flags = Lua::get<int>(L, -1);
		_p->RecalculateBounds(flags);
		return 0;
	}

	static int RecalculateUpdateStrategy(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 0);
		_p->RecalculateUpdateStrategy();
		return 0;
	}

	static int AddComponent(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		Component component = Lua::get<Component>(L, -1);
		return Lua::push(L, _p->AddComponent(component));
	}

	static int AddComponent2(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		std::string name = Lua::get<std::string>(L, -1);
		return Lua::push(L, _p->AddComponent(name));
	}

	static int GetComponent(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		suede_guid guid = Lua::get<suede_guid>(L, -1);
		return Lua::push(L, _p->GetComponent(guid));
	}

	static int GetComponent2(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		std::string name = Lua::get<std::string>(L, -1);
		return Lua::push(L, _p->GetComponent(name));
	}

	static int GetComponents(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		suede_guid guid = Lua::get<suede_guid>(L, -1);
		return Lua::pushList(L, _p->GetComponents(guid));
	}

	static int GetComponents2(lua_State* L) {
		GameObject& _p = *Lua::callerSharedPtr<GameObject>(L, 1);
		std::string name = Lua::get<std::string>(L, -1);
		return Lua::pushList(L, _p->GetComponents(name));
	}

public:
	static void create(lua_State* L) {
		Lua::createMetatable<GameObject>(L);
	}
	
	static void initialize(lua_State* L, std::vector<luaL_Reg>& regs) {
		regs.push_back(luaL_Reg { "NewGameObject", NewGameObject });

		luaL_Reg metalib[] = {
			{ "__gc", Lua::deleteSharedPtr<GameObject> },
			{ "GetActive", GetActive },
			{ "SetActiveSelf", SetActiveSelf },
			{ "GetActiveSelf", GetActiveSelf },
			{ "GetUpdateStrategy", GetUpdateStrategy },
			{ "SetTag", SetTag },
			{ "GetName", GetName },
			{ "SetName", SetName },
			{ "CullingUpdate", CullingUpdate },
			{ "RenderingUpdate", RenderingUpdate },
			{ "GetTransform", GetTransform },
			{ "RecalculateBounds", RecalculateBounds },
			{ "RecalculateUpdateStrategy", RecalculateUpdateStrategy },
			{ "AddComponent", AddComponent },
			{ "AddComponent2", AddComponent2 },
			{ "GetComponent", GetComponent },
			{ "GetComponent2", GetComponent2 },
			{ "GetComponents", GetComponents },
			{ "GetComponents2", GetComponents2 },
			{ nullptr, nullptr }
		};

		Lua::initMetatable<GameObject>(L, metalib, Lua::metatableName<Object>());
	}
};
